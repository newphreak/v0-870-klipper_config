## Thanks to Haribro for the glyphs. I just had to update them to work.
## https://github.com/FHeilmann/klipper_config/blob/master/klipper_configs/lcd.cfg
#####################################################################
#       Display
#####################################################################
[display]
lcd_type: sh1106
i2c_mcu: displayEncoder
i2c_bus: i2c1a
encoder_steps_per_detent: 2
encoder_pins: ^displayEncoder:PA3, ^displayEncoder:PA4
click_pin: ^!displayEncoder:PA1
kill_pin: ^!displayEncoder:PA5
x_offset: 2
vcomh: 31
display_group: __voron_display

[display_template _extruder_temperature]
param_heater_name: "extruder"
text:
  {% if param_heater_name in printer %}
    {% set heater = printer[param_heater_name] %}
    # Show glyph
    {% if (heater.target) and (printer.extruder.can_extrude|lower == 'true') %}
        {% set frame = (printer.toolhead.estimated_print_time|int % 3) + 1 %}
        ~extruder{frame}~
	   {% elif (heater.target) and (printer.extruder.can_extrude|lower == 'false') %}
	    ~extruder2~
      {% else %}
        ~extruder~
      {% endif %}
    # Show temperature
    { "%3.0f" % (heater.temperature,) }
    # Optionally show target
    {% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
      ~right_arrow~
      { "%0.0f" % (heater.target,) }
    {% endif %}
    ~degrees~
  {% endif %}

[display_template _heater_bed_temperature]
param_heater_name: "heater_bed"
text:
  {% if param_heater_name in printer %}
    {% set heater = printer[param_heater_name] %}
    # Show glyph
    {% if param_heater_name == "heater_bed" %}
      {% if heater.target %}
        {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
        ~bed_heat{frame}~
      {% else %}
        ~bed~
      {% endif %}
    {% endif %}
    # Show temperature
    { "%3.0f" % (heater.temperature,) }
    # Optionally show target
    {% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
      ~right_arrow~
      { "%0.0f" % (heater.target,) }
    {% endif %}
    ~degrees~
  {% endif %}


[display_data __voron_display extruder]
position: 0, 0
text: { render("_extruder_temperature", param_heater_name="extruder") }

[display_data __voron_display fan]
position: 0, 10
text:
  {% if 'fan' in printer %}
    {% set speed = printer.fan.speed %}
    {% if speed %}
      {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
      ~fan{frame}~
    {% else %}
      ~fan1~
    {% endif %}
    { "{:>4.0%}".format(speed) }
  {% endif %}

[display_data __voron_display bed]
position: 1, 0
text: { render("_heater_bed_temperature", param_heater_name="heater_bed") }

[display_data __voron_display progress_text]
position: 1, 10
text:
  {% set progress = printer.display_status.progress %}
  { "{:^6.0%}".format(progress) }
  
[display_data __voron_display progress_text2]
position: 1, 10
text:
  {% set progress = printer.display_status.progress %}
  { draw_progress_bar(1, 10, 6, progress) }

[display_data __voron_display printing_time]
position: 2, 10
text:
  {% set ptime = printer.idle_timeout.printing_time %}
  { "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }

#########################################################
# This section defines the actual chamber temp. field,
# replace 'temperature_sensor chamber' as necessary
#########################################################
[display_data __voron_display chamber]
position: 2, 0
text:
  {% if ('temperature_sensor chamber' in printer) and (not 'temperature_sensor frame' in printer)  %}
		{% set chamber = printer['temperature_sensor chamber'] %}
		~chamber~ { "%2.0f" % (chamber.temperature,) }~degrees~
	{% endif %}
    {% if ('temperature_sensor chamber' in printer) and ('temperature_sensor frame' in printer)  %}
		{% set chamber = printer['temperature_sensor chamber'] %}
    {% set frame_temp = printer['temperature_sensor frame'] %}
    ~chamber~ { "%2.0f" % (chamber.temperature,) }/{ "%2.0f" % (frame_temp.temperature,) }~degrees~
	{% endif %}
[display_data __voron_display print_status]
position: 3, 0
text:
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    {% set pos = printer.toolhead.position %}
    { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
  {% else %}
    { "   V0.1 870" }  ## Edit, remove a space if your serial has 4 digits
  {% endif %}

[display_data __voron_display voron_logo]
position: 3, 12
text:
  {% if printer.display_status.message %}
  {% elif printer.idle_timeout.printing_time %}
  {% else %}
  ## Choose which glyph you want after the serial
    #~voron~
    ~voron_heart~
    #~ercfcarrot~
  {% endif %}