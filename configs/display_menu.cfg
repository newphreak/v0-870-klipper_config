#Resources:
# Default menu: https://github.com/Klipper3d/klipper/blob/master/klippy/extras/display/menu.cfg
# Documentation: https://www.klipper3d.org/Config_Reference.html#menu
### This MENU ###
# Main
#	+Tune
#		+ Speed %
#       + Flow %
#       + Z Offset:
#		+ Cancel Print
#		+ Pause Print
#		+ Resume Print
#		+ M600
#		+ Back to back
#			+ On
#			+ Off
#	+ Control
#		+ Home All
#		+ Home Z
#		+ Home X/Y
#		+ QGL
#		+ Steppers off
#		+ Fan speed: 0%
#		+ Nevermore: 0%
#		+ Exhaust fan: 0%
#		+ Move 1mm
#	+ Temperature
#		+ Ext:
#		+ Bed:
#		+ Turn off all
#	+ Filament
#		+ Unload filament						##Custom macro
#		+ Load filament							##Custom macro
#	+ Parking
#		+ Front
#		+ Front Low
#		+ Center
#		+ Bed
#		+ Rear
#	+ Leds
#		+ Leds off
#		+ Blue
#		+ Green
#		+ Orange
#		+ Purple
#		+ Red
#		+ White
#		+ Yellow
#	+ Setup
#		+ Save config
#		+ Restart
#			+ Restart host
#			+ Restart FW
#		+ Calibration
#			+ BedScrewsAdjust
#			+ ADJUSTED
#			+ ACCEPT
#		+ PID tuning
#			+ Tune hotend PID					##Set to 250c
#			+ Tune hotbed PID					##Set to 115c
#   + Files
#       + blablabla
#       + blablabla
#8 categories
#####################################################################
#       Change knob rotation to use clockwise = down (doesn't actually apply to input values like temp/%)
#       Change encoder steps to 2, needed this to get a move on every click of the encoder
#       Uncomment if wanted
#####################################################################
#menu_reverse_navigation: True
#encoder_steps_per_detent: 2
#####################################################################
#       Set this menu as default
#####################################################################
[display]
menu_root: __voron
#####################################################################
#       Main
#####################################################################
[menu __voron]
type: list
name: Main
#####################################################################
#       Tune
#####################################################################
[menu __voron __tune]
type: list
name: Tune
enable: {(printer.print_stats.state == "paused") or (printer.idle_timeout.state == "Printing")}
[menu __voron __tune __speed]
type: input
name: Speed: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.speed_factor}
input_min: 0.01
input_max: 5
input_step: 0.01
realtime: True
gcode:
    M220 S{'%d' % (menu.input*100)}
[menu __voron __tune __flow]
type: input
name: Flow: {'%3d' % (menu.input*100)}%
input: {printer.gcode_move.extrude_factor}
input_min: 0.01
input_max: 2
input_step: 0.01
realtime: True
gcode:
    M221 S{'%d' % (menu.input*100)}
[menu __voron __tune __offsetz]
type: input
name: Z Offset:{'%05.3f' % menu.input}
input: {printer.gcode_move.homing_origin.z}
input_min: -5
input_max: 5
input_step: 0.005
realtime: True
gcode:
    SET_GCODE_OFFSET Z={'%.3f' % menu.input} MOVE=1
[menu __voron __tune __cancel]
type: command
name: Cancel Print
enable:	{printer.idle_timeout.state == "Printing"}
gcode:
	CANCEL_PRINT
	{menu.exit(update)}
[menu __voron __tune __pause]
type: command
name: Pause  Print
enable: {printer.print_stats.state == "printing"}
gcode:
	PAUSE
	{menu.back(update)}
[menu __voron __tune __resume]
type: command
name: Resume Print
enable: {printer.print_stats.state == "paused"}
gcode:
	RESUME
	{menu.exit(update)}
[menu __voron __tune __M600]
type: command
name: Colorchange(M600)
enable: {printer.print_stats.state == "printing"}
gcode:
	M600
	{menu.exit(update)}
[menu __voron __tune __b2b]
type: list
name: Back to back
[menu __voron __tune __b2b __on]
type: command
name: On
enable: {'gcode_macro TOGGLE_BACK_TO_BACK' in printer}
gcode: SAVE_VARIABLE VARIABLE=b2b_state VALUE='"on"'
[menu __voron __tune __b2b __off]
type: command
enable: {'gcode_macro TOGGLE_BACK_TO_BACK' in printer}
name: Off
gcode: SAVE_VARIABLE VARIABLE=b2b_state VALUE='"off"'
#####################################################################
#       Control
#####################################################################
[menu __voron __control]
type: list
name: Control
[menu __voron __control __home]
type: command
name: Home All
gcode: G28
[menu __voron __control __homez]
type: command
enable:	{not printer.idle_timeout.state == "Printing"}
name: Home Z
gcode: G28 Z
[menu __voron __control __homexy]
type: command
enable:	{not printer.idle_timeout.state == "Printing"}
name: Home X/Y
gcode: G28 X Y
[menu __voron __control __QGL]
type: command
enable:	{(not printer.idle_timeout.state == "Printing") and ('quad_gantry_level' in printer)}
name: QGL
gcode:
	G28
	QUAD_GANTRY_LEVEL
	G28 Z
[menu __voron __control __disable]
type: command
enable:	{not printer.idle_timeout.state == "Printing"}
name: Steppers off
gcode:
    M84
    M18
[menu __voron __control __fanspeed]
type: input
enable: {'fan' in printer}
name: Fan speed: {'%3d' % (menu.input*100)}%
input: {printer.fan.speed}
input_min: 0
input_max: 1
input_step: 0.1
gcode:
    M106 S{'%d' % (menu.input*255)}
[menu __voron __control __nevermorespeed]
type: input
enable: {'fan_generic nevermore_fan' in printer}
name: Nevermore: {'%3d' % (menu.input*100)}%
input: {printer['fan_generic nevermore_fan'].speed}
input_min: 0
input_max: 1
input_step: 0.1
gcode:
    SET_FAN_SPEED FAN=nevermore_fan SPEED={menu.input}
[menu __voron __control __exhaustspeed]
type: input
enable: {'fan_generic exhaust_fan' in printer}
name: Exhaust:   {'%3d' % (menu.input*100)}%
input: {printer['fan_generic exhaust_fan'].speed}
input_min: 0
input_max: 1
input_step: 0.1
gcode:
    SET_FAN_SPEED FAN=exhaust_fan SPEED={menu.input}
[menu __voron __control __move_1mm]
type: list
enable:	{not printer.idle_timeout.state == "Printing"}
name: Move 1mm
[menu __voron __control __move_1mm __axis_x]
type: input
name: Move X:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.x}
input_min: {printer.toolhead.axis_minimum.x}
input_max: {printer.toolhead.axis_maximum.x}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 X{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis
[menu __voron __control __move_1mm __axis_y]
type: input
name: Move Y:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.y}
input_min: {printer.toolhead.axis_minimum.y}
input_max: {printer.toolhead.axis_maximum.y}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Y{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis
[menu __voron __control __move_1mm __axis_z]
type: input
name: Move Z:{'%05.1f' % menu.input}
input: {printer.gcode_move.gcode_position.z}
input_min: 0
input_max: {printer.toolhead.axis_maximum.z}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    G90
    G1 Z{menu.input}
    RESTORE_GCODE_STATE NAME=__move__axis
[menu __voron __control __move_1mm __axis_e]
type: input
name: Move E:{'%+06.1f' % menu.input}
input: 0
input_min: -{printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_max: {printer.configfile.config.extruder.max_extrude_only_distance|default(50)}
input_step: 1.0
gcode:
    SAVE_GCODE_STATE NAME=__move__axis
    M83
    G1 E{menu.input} F240
    RESTORE_GCODE_STATE NAME=__move__axis
#####################################################################
#       Temperature
#####################################################################
[menu __voron __temp]
type: list
name: Temperature
[menu __voron __temp __hotend0_target]
type: input
enable: {('extruder' in printer) and ('extruder' in printer.heaters.available_heaters)}
name: {"Ext:%3.0f (%4.0f)" % (menu.input, printer.extruder.temperature)}
input: {printer.extruder.target}
input_min: 0
input_max: {printer.configfile.config.extruder.max_temp}
input_step: 5
gcode: M104 T0 S{'%.0f' % menu.input}
[menu __voron __temp __hotbed_target]
type: input
enable: {'heater_bed' in printer}
name: {"Bed:%3.0f (%4.0f)" % (menu.input, printer.heater_bed.temperature)}
input: {printer.heater_bed.target}
input_min: 0
input_max: {printer.configfile.config.heater_bed.max_temp}
input_step: 5
gcode: M140 S{'%.0f' % menu.input}
[menu __voron __temp __all]
type: command
enable: {('extruder' in printer) and ('heater_bed' in printer)}
name: Turn off all
gcode:
    M104 S0
    M140 S0
	{menu.exit(update)}
#####################################################################
#       Filament
#####################################################################
[menu __voron __filament]
type: list
name: Filament
enable: {((('gcode_macro UNLOAD_FILAMENT' in printer) and (printer.print_stats.state == "paused")) or ('gcode_macro UNLOAD_FILAMENT' in printer) and (not printer.idle_timeout.state == "Printing"))}
[menu __voron __filament __load]
type: input
enable: {'gcode_macro LOAD_FILAMENT' in printer}
index: 0
name: Load: {['ABS','PETG','PLA','TPU'][menu.input|int]}
input: 0
input_min: 0
input_max: 3
gcode:
  {%- if menu.input|int == 1 -%}
    LOAD_FILAMENT I=2
  {%- elif menu.input|int == 2 -%}
    LOAD_FILAMENT I=0
  {%- elif menu.input|int == 3 -%}
    LOAD_FILAMENT I=3
  {%- elif menu.input|int == 0  -%}
    LOAD_FILAMENT I=1
  {%- endif -%}
  {menu.exit(force)}
[menu __voron __filament __unload]
type: command
name: Unload
enable: {'gcode_macro UNLOAD_FILAMENT' in printer}
gcode:
	UNLOAD_FILAMENT
	{menu.exit(update)}
#[menu __voron __filament __unload]
#type: input
#enable: {'gcode_macro UNLOAD_FILAMENT' in printer}
#index: 1
#name: Unload: {['ABS','PETG','PLA','TPU'][menu.input|int]}
#input: 0
#input_min: 0
#input_max: 3
#gcode:
#      {%- if menu.input|int == 1 -%}
#	    {menu.exit(update)}
#        UNLOAD_FILAMENT FILAMENTINDEX=2
#      {%- elif menu.input|int == 2 -%}
#	    {menu.exit(update)}
#        UNLOAD_FILAMENT FILAMENTINDEX=0
#      {%- elif menu.input|int == 3 -%}
#	    {menu.exit(update)}
#        UNLOAD_FILAMENT FILAMENTINDEX=3
#      {%- else -%}
#	    {menu.exit(update)}
#        UNLOAD_FILAMENT FILAMENTINDEX=1
#      {%- endif -%}
#####################################################################
#       Flexplate (zellneralex's awesome flexplate macro)
#####################################################################
#[menu __voron __flexplate]
#type: list
#name: Flexplates 
#enable: {'plate_array' in printer.save_variables.variables}

#// printer['save_variables'].variables = {'lastservicetime': 6388, 'filament_used': 1096677.66349, 'b2b_state': 'off', 'plate_array': [('ENERGETIC_Textured', -0.12), #('ENERGETIC_Smooth', 0.075), ('MITSUBISHI', 0.21), ('MITSUBISHI_COLD', 0.19)], 'plate_index': 3, 'totalprintingtime': 1035944, 'filterusetime': 6388, #'extruder_temp_previous': 205, 'debug': 'true'}

#[menu __voron __flexplate __set]
#type: input
#name:  Set: {printer.save_variables.variables.plate_array[menu.input|int].name}
#enable: {printer.print_stats.state != "printing" and printer.print_stats.state != "paused"}
#input: {printer.save_variables.variables.plate_index}
#input_min: 0
#input_max: {printer.save_variables.variables.plate_array|length - 1}
#gcode:
#  {%- if menu.event == 'long_click' -%}
#    SET_PLATE INDEX={menu.input|int}
#  {%- endif -%}

#[menu __voron __flexplate __offset]
#type: input
#name:  Offset:{'%01.3f' % menu.input}
#enable: {printer.print_stats.state != "printing" and printer.print_stats.state != "paused"}
#input: {printer.save_variables.variables.plate_array[printer.save_variables.variables.plate_index].offset}
#input_min: -1.0
#input_max: 1.0
#input_step: 0.001
#gcode:
#  {%- if menu.event == 'long_click' -%}
#    CHANGE_PLATE_VALUE OFFSET={menu.input|float}
#  {%- endif -%}
#####################################################################
#       Parking
#####################################################################
[menu __voron __Parking]
type: list
name: Parking
enable: {('gcode_macro PARK_FRONT' in printer) and (not printer.idle_timeout.state == "Printing")}
[menu __voron __Parking __front_mid]
type: command
name:  Front Mid
enable: {'gcode_macro PARK_FRONT_MID' in printer}
gcode:
    PARK_FRONT_MID
	{menu.exit(update)}
[menu __voron __Parking __front]
type: command
name:  Front
enable: {'gcode_macro PARK_FRONT' in printer}
gcode:
    PARK_FRONT
	{menu.exit(update)}
[menu __voron __Parking __front_low]
type: command
name:  Front Low
enable: {'gcode_macro PARK_FRONT_LOW' in printer}
gcode:
    PARK_FRONT_LOW
	{menu.exit(update)}
[menu __voron __Parking __center]
type: command
name:  Center
enable: {'gcode_macro PARK_CENTER' in printer}
gcode:
    PARK_CENTER
	{menu.exit(update)}
[menu __voron __Parking __bed]
type: command
name:  Bed
enable: {'gcode_macro PARK_BED' in printer}
gcode:
    PARK_BED
	{menu.exit(update)}
[menu __voron __Parking __rear]
type: command
name:  Rear
enable: {'gcode_macro PARK_REAR' in printer}
gcode:
    PARK_REAR
	{menu.exit(update)}
#####################################################################
#       Leds
#####################################################################
[menu __voron __leds]
type: list
name: Leds
enable: {'neopixel case_lights' in printer}
[menu __voron __leds __ledsoff]
type: command
name:  Leds Off
gcode:
    LED_OFF
	{menu.exit(update)}
[menu __voron __leds __blue]
type: command
name:  Blue
gcode:
    BLUE
	{menu.exit(update)}
[menu __voron __leds __green]
type: command
name:  Green
gcode:
    GREEN
	{menu.exit(update)}
[menu __voron __leds __orange]
type: command
name:  Orange
gcode:
    ORANGE
	{menu.exit(update)}
[menu __voron __leds __purple]
type: command
name:  Purple
gcode:
    PURPLE
	{menu.exit(update)}
[menu __voron __leds __red]
type: command
name:  Red
gcode:
    RED
	{menu.exit(update)}
[menu __voron __leds __white]
type: command
name:  White
gcode:
    WHITE
	{menu.exit(update)}
[menu __voron __leds __yellow]
type: command
name:  Yellow
gcode:
    YELLOW
	{menu.exit(update)}
#####################################################################
#       Setup
#####################################################################
[menu __voron __setup]
type: list
enable:	{not printer.idle_timeout.state == "Printing"}
name: Setup
[menu __voron __setup __save_config]
type: command
name: Save config
gcode:
	SAVE_CONFIG
	{menu.exit(update)}
[menu __voron __setup __restart]
type: list
name: Restart
[menu __voron __setup __restart __host_restart]
type: command
name: Restart host
gcode: RESTART
[menu __voron __setup __restart __firmware_restart]
type: command
name: Restart FW
gcode: FIRMWARE_RESTART
[menu __voron __setup __shutdown]
type: command
name: Shutdown
gcode:
	{menu.exit()}
	M117 Shutting down
	 {% if 'neopixel case_lights' in printer %}	
    LED_OFF
	{% endif %}
	{action_respond_info("Shutting down")}
    UPDATE_DELAYED_GCODE ID=_menu_pi_shutdown DURATION=3
[menu __voron __setup __calibration]
type: list
enable: {printer['gcode_macro _USER_VARIABLE'].bed_screws == "true"}
name: Calibration
[menu __voron __setup __calibration __bed_screws_adjust]
type: command
name: BedScrewsAdjust
enable: {printer['gcode_macro _USER_VARIABLE'].bed_screws == "true"}
gcode:
    {% if homed_axes != "xyz" %}
        G90
        G28
    {% endif %}
    BED_SCREWS_ADJUST
[menu __voron __setup __calibration __adjusted]
type: command
name: ADJUSTED
enable: {printer['gcode_macro _USER_VARIABLE'].bed_screws == "true"}
gcode: ADJUSTED
[menu __voron __setup __calibration __accept]
type: command
name: ACCEPT
enable: {printer['gcode_macro _USER_VARIABLE'].bed_screws == "true"}
gcode: ACCEPT
[menu __voron __setup __tuning]
type: list
name: PID tuning
[menu __voron __setup __tuning __hotend_pid_tuning]
type: command
enable: {'extruder' in printer}
name: Tune Hotend PID
gcode: PID_CALIBRATE HEATER=extruder TARGET=250 WRITE_FILE=1
[menu __voron __setup __tuning __hotbed_pid_tuning]
type: command
enable: {'heater_bed' in printer}
name: Tune Hotbed PID
gcode: PID_CALIBRATE HEATER=heater_bed TARGET=115 WRITE_FILE=1
#####################################################################
#       Files
#####################################################################
[menu __voron __sdcard]
type: vsdlist
enable: {('virtual_sdcard' in printer) and (not printer.idle_timeout.state == "Printing")}
name: Files
#####################################################################
#       Pi shutdown script borrowed from https://github.com/richardjm/voronpi-klipper-backup/blob/master/config.d/menu_tweaks.cfg
#####################################################################
[delayed_gcode _menu_pi_shutdown]
gcode:
	{action_emergency_stop("Shutdown from menu")}
	{action_call_remote_method("shutdown_machine")}
    
#####################################################################
#       Disable unhelpful menus if using stock menu
#####################################################################
#[menu __main __octoprint]
#type: disabled
#[menu __main __temp __preheat_pla]
#type: disabled
#[menu __main __temp __preheat_abs]
#type: disabled
#[menu __main __filament __loadf]
#type: disabled
#[menu __main __filament __loads]
#type: disabled
#[menu __main __filament __unloadf]
#type: disabled
#[menu __main __filament __unloads]
#type: disabled
#[menu __main __filament __feed]
#type: disabled
#[menu __main __filament __loadf]
#type: disabled
#[menu __main __filament __hotend0_target]
#type: disabled
#[menu __main __temp __cooldown]
#type: disabled
#[menu __main __setup __calib __delta_calib_auto]
#type: disabled
#[menu __main __setup __calib __delta_calib_man]
#type: disabled
#[menu __main __control __move_10mm]
#type: disabled
#[menu __main __control __move_01mm]
#type: disabled
#[menu __main __setup __calib __bedprobe]
#type: disabled
#[menu __main __setup __dump]
#type: disabled
#[menu __main __control __fanonoff]
#type: disabled
#[menu __main __setup __calib]
#type: disabled