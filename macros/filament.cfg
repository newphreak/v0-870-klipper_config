#####################################################################
#       Filaments go squirt extruder hopefully not Chrhbn4twtv
#####################################################################
[gcode_macro LOAD_FILAMENT]
description: Load filament
gcode:
  # command params
  {% set load_distance = printer['gcode_macro _USER_VARIABLE'].load_distance|int %}
  {% set load_extrude = printer['gcode_macro _USER_VARIABLE'].load_extrude|int %}
  {% set retract_end = printer['gcode_macro _USER_VARIABLE'].retract_end|int %}
  {% set filament = params.FILAMENT|default(PLA)|upper %}
  # variables
  {% set extruder_target = printer.extruder.target %}
  # features
  {% set ena_debug = printer.save_variables.variables.debug|lower %}

  {% if ena_debug == "true" %}
    {action_respond_info('==== LOAD_FILAMENT ====')}
    {action_respond_info("filament: [%s]" % (filament))}
    {action_respond_info("load distance: [%s] load extrude: [%s]" % (load_distance,load_extrude))}
    {action_respond_info("retract_end: [%s]" % (retract_end))}
    {action_respond_info("extruder_target: %s" % (extruder_target))}
    {action_respond_info('===============')}
  {% endif %}

  SAVE_GCODE_STATE NAME=LOAD_FILAMENT
  PARK_FRONT_MID
  G90 ; absolute positioning
  {% if filament == "PLA" %}
    M109 S205
	SAVE_VARIABLE VARIABLE=extruder_temp_previous VALUE={205|int}
  {% elif filament == "ABS" %}
    M109 S240
	SAVE_VARIABLE VARIABLE=extruder_temp_previous VALUE={240|int}
  {% elif filament == "PETG" %}
    M109 S250
	SAVE_VARIABLE VARIABLE=extruder_temp_previous VALUE={250|int}
  {% else %}
	M109 S215  ##This will be your TPU temp
	SAVE_VARIABLE VARIABLE=extruder_temp_previous VALUE={215|int}
  {% endif %}
  M83 ; set extruder to relative
  G1 E{load_distance} F1500 ; quickly load 90mm filament
  G1 E{load_extrude} F300 ; slower extrusion for hotend path
  G1 E-{retract_end} F600 ; retract
  {% if printer.idle_timeout.state == "Printing" %}
    M109 S{extruder_target} ; restore old extruder temperature
  {% else %}
    UPDATE_DELAYED_GCODE ID=HEATER_OFF DURATION=300
  {% endif %}
  RESTORE_GCODE_STATE NAME=LOAD_FILAMENT
  
[gcode_macro UNLOAD_FILAMENT]
gcode:
  # command params
  {% set extruder_lower_by = printer['gcode_macro _USER_VARIABLE'].extruder_lower_by|int %}
  {% set unload_distance = printer['gcode_macro _USER_VARIABLE'].unload_distance|int %}
  # variables
  {% set extruder_target = printer.extruder.target|int %}
  {% set unretract_start = printer['gcode_macro _USER_VARIABLE'].unretract_start|float %}
  {% set extruder_previous = printer.save_variables.variables.extruder_temp_previous|int %}
  # features
  {% set ena_debug = printer.save_variables.variables.debug|lower %}
  
  {% if ena_debug == "true" %}
    {action_respond_info('==== UNLOAD_FILAMENT ====')}
    {action_respond_info("extruder_lower_by: [%s]" % (extruder_lower_by))}
    {action_respond_info("unload_distance: [%s]" % (unload_distance))}
    {action_respond_info("extruder_target: [%s]" % (extruder_target))}
	{action_respond_info("unretract_start: [%s]" % (unretract_start))}
	{action_respond_info("extruder_previous: [%s]" % (extruder_previous))}
    {action_respond_info('===============')}
  {% endif %}

  SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT
  PARK_FRONT_MID
  M109 S{extruder_previous-extruder_lower_by}
  G90 # Absolute Positioning
  M83 # Make the E relative independant of other axis
  G1 E{unretract_start} F250 # Unretract filament
  RESET_EXTRUDER
  ERCF_FORM_TIP_STANDALONE
  {% if printer.idle_timeout.state == "Printing" %}
    M109 S{extruder_target} ; restore old extruder temperature
  {% else %}
    UPDATE_DELAYED_GCODE ID=HEATER_OFF DURATION=300
  {% endif %}
  RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT

[gcode_macro ERCF_FORM_TIP_STANDALONE]
description: Generic tip forming macro
gcode:
    {% set COOLING_TUBE_LENGTH = params.COOLING_TUBE_LENGTH|default(15) %} # Dragon ST: 15, Dragon HF: 10, Mosquito: 20
    {% set COOLING_TUBE_RETRACTION = params.COOLING_TUBE_RETRACTION|default(35) %} # Dragon ST: 35, Dragon HF: 30, Mosquito: 38
    {% set INITIAL_COOLING_SPEED = params.INITIAL_COOLING_SPEED|default(10) %}
    {% set FINAL_COOLING_SPEED = params.FINAL_COOLING_SPEED|default(50) %}
    {% set COOLING_MOVES = params.COOLING_MOVES|default(5) %}
    {% set USE_SKINNYDIP = params.USE_SKINNYDIP|default(1) %}
    {% set USE_FAST_SKINNYDIP = params.USE_FAST_SKINNYDIP|default(1) %}
    {% set SKINNYDIP_DISTANCE = params.SKINNYDIP_DISTANCE|default(26) %}
    {% set DIP_INSERTION_SPEED = params.DIP_INSERTION_SPEED|default(33) %}
    {% set DIP_EXTRACTION_SPEED = params.DIP_EXTRACTION_SPEED|default(70) %}
    {% set MELT_ZONE_PAUSE = params.MELT_ZONE_PAUSE|default(0) %}
    {% set COOLING_ZONE_PAUSE = params.COOLING_ZONE_PAUSE|default(0) %}
    {% set UNLOADING_SPEED_START = params.UNLOADING_SPEED_START|default(199) %}
    {% set UNLOADING_SPEED = params.UNLOADING_SPEED|default(20) %}
    {% set RAMMING_VOLUME = params.RAMMING_VOLUME|default(0) %} # in mm3
    {% set INITIAL_RETRACT = params.INITIAL_RETRACT|default(0) %} # Use an initial retract or not. Don't use it if you want to ram the filament
    {% set FINAL_EJECT = params.FINAL_EJECT|default(1) %} # Fully eject the filament afterwards, default is no

    G91
    G92 E0

    SET_PRESSURE_ADVANCE ADVANCE=0
    {% set OLD_TEMP = printer.extruder.target %}

    # Ramming with SuperSlicer standard setting
    {% if INITIAL_RETRACT|int == 1 %}
        G1 E-8.5000 F2500
    {% endif %}

    {% set RATIO = (RAMMING_VOLUME|float) /23.0 %}

    G1 E{0.5784 * RATIO|float} F299 #7
    G1 E{0.5834 * RATIO|float} F302 #3
    G1 E{0.5918 * RATIO|float} F306 #6
    G1 E{0.6169 * RATIO|float} F319 #6
    G1 E{0.3393 * RATIO|float} F350 #0
    G1 E{0.3363 * RATIO|float} F350 #0
    G1 E{0.7577 * RATIO|float} F392 #6
    G1 E{0.8382 * RATIO|float} F434 #3
    G1 E{0.7776 * RATIO|float} F469 #9
    G1 E{0.1293 * RATIO|float} F469 #9
    G1 E{0.9673 * RATIO|float} F501 #2
    G1 E{1.0176 * RATIO|float} F527 #2
    G1 E{0.5956 * RATIO|float} F544 #6
    G1 E{0.4555 * RATIO|float} F544 #6
    G1 E{1.0662 * RATIO|float} F552 #4

    # Retraction
    {% set TOTAL_RETRACTION_DISTANCE = COOLING_TUBE_RETRACTION|float + COOLING_TUBE_LENGTH|float / 2 - 15 %}
    G1 E-15 F{1.0 * UNLOADING_SPEED_START|float * 60}
    G1 E-{0.7 * TOTAL_RETRACTION_DISTANCE} F{1.0 * UNLOADING_SPEED|float * 60}
    G1 E-{0.2 * TOTAL_RETRACTION_DISTANCE} F{0.5 * UNLOADING_SPEED|float * 60}
    G1 E-{0.1 * TOTAL_RETRACTION_DISTANCE} F{0.3 * UNLOADING_SPEED|float * 60}

    # Generate Cooling Moves
    {% set SPEED_INC = (FINAL_COOLING_SPEED|float - INITIAL_COOLING_SPEED|float) / (2 * COOLING_MOVES|float - 1) %}
    {% for move in range(COOLING_MOVES|int) %}
      G1 E{COOLING_TUBE_LENGTH} F{(INITIAL_COOLING_SPEED|float + SPEED_INC*move*2) * 60}
      G1 E-{COOLING_TUBE_LENGTH} F{(INITIAL_COOLING_SPEED|float + SPEED_INC*(move*2+1)) * 60}
    {% endfor %}

    # Generate a skinnydip move
    {% if USE_SKINNYDIP|int == 1 %}
      G1 E{SKINNYDIP_DISTANCE} F{DIP_INSERTION_SPEED|float * 60}
      G4 P{MELT_ZONE_PAUSE}
      G1 E-{SKINNYDIP_DISTANCE} F{DIP_EXTRACTION_SPEED|float * 60}
      G4 P{COOLING_ZONE_PAUSE}
    {% endif %}

    {% if FINAL_EJECT|int == 1 %}
        G92 E0
        G1 E-80 F2500
    {% endif %}

    G92 E0

[delayed_gcode HEATER_OFF]
gcode:
  M109 S0